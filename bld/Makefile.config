# This makefile applies options. Set the options in the top-level makefile.

include $(MAKER_ROOT)/Makefile.pre

LIBMSP_SLEEP_TIMER_FREQ = $(call calc_int,$(CLOCK_FREQ_$(LIBMSP_SLEEP_TIMER_CLK)) / ($(LIBMSP_SLEEP_TIMER_DIV)))

ifeq ($(CONFIG_RADIO_TRANSMIT_PAYLOAD),1)
DEPS += libsprite
CFLAGS += -DCONFIG_RADIO_TRANSMIT_PAYLOAD
endif

# Collect and send to host/ground a packet with energy profile and/or app output
ifeq ($(CONFIG_ENABLE_PAYLOAD),1)

CFLAGS += -DCONFIG_ENABLE_PAYLOAD

# Turn on periodic payload sending automatically
ifeq ($(CONFIG_PERIODIC_PAYLOAD),auto)
CFLAGS += -DCONFIG_PERIODIC_PAYLOAD_AUTO
else ifeq ($(CONFIG_PERIODIC_PAYLOAD),manual)
	# nothing to setup, console command always available
endif

# Collect an energy profile using watchpoints
# 	An energy profile is a distribution of energy at each watchpoint
# 	event, where the distribution is given by the count in each
# 	quantized energy level.
ifeq ($(CONFIG_COLLECT_ENERGY_PROFILE),1)

ifneq ($(CONFIG_ENABLE_WATCHPOINTS),1)
$(error CONFIG_COLLECT_ENERGY_PROFILE requires CONFIG_ENABLE_WATCHPOINTS)
endif

CFLAGS += -DCONFIG_COLLECT_ENERGY_PROFILE
endif # CONFIG_COLLECT_ENERGY_PROFILE

# Collect a data packet from the app on the target
ifeq ($(CONFIG_COLLECT_APP_OUTPUT),1)

ifneq ($(CONFIG_ENABLE_WATCHPOINTS),1)
$(error CONFIG_COLLECT_APP_OUTPUT requires CONFIG_ENABLE_DEBUG_MODE)
endif

CFLAGS += -DCONFIG_COLLECT_APP_OUTPUT
endif # CONFIG_COLLECT_APP_OUTPUT

endif # CONFIG_ENABLE_PAYLOAD

# Read VCAP from ADC and use the value to seed random number generator via srand
ifeq ($(CONFIG_SEED_RNG_FROM_VCAP),1)
	CFLAGS += -DCONFIG_SEED_RNG_FROM_VCAP
endif

# Timeout after which to abort fetching data from app if no reply (in cycles)
ifneq ($(CONFIG_TARGET_COMM_TIMEOUT),)
   	CFLAGS += -DCONFIG_TARGET_COMM_TIMEOUT=$(CONFIG_TARGET_COMM_TIMEOUT)
endif


# Lower boundary in the histogram of watchpoint energies in the profile
#     V to raw ADC value conversion:
#       Vmin/Vref * 2^12, where Vref = 2.5 (see adc.c), and 12 is for 12-bit ADC
#     Examples: Vmin = 1.8v => 2949
#     Examples: Vmin = 2.0v => 3276
ifneq ($(CONFIG_ENERGY_PROFILE_MIN_VOLTAGE),)
	CFLAGS += -DCONFIG_ENERGY_PROFILE_MIN_VOLTAGE=$(CONFIG_ENERGY_PROFILE_MIN_VOLTAGE)
endif

# Energy profile buckets that are smaller than one byte
#   NOTE: does not work!
ifeq ($(CONFIG_PROFILE_SUB_BYTE_BUCKET_SIZES),1)
	CFLAGS += -DCONFIG_PROFILE_SUB_BYTE_BUCKET_SIZES
endif

# Number of tap points in comparator resistor ladder (MCU HW characteristic)
COMP_TAPS = 32

ifneq ($(PROFILING_VBANK_MIN),)
VBANK_DIVIDED = $(PROFILING_VBANK_MIN) * $(call vdiv,$(VBANK_DIV))
VBANK_TAP = $(call calc_int,$(COMP_TAPS) * ($(VBANK_DIVIDED)) / $(VDD_EDB))
VBANK_TAP_UP = $(call calc_int,$(VBANK_TAP) + 1)
VBANK_TAP_DOWN = $(call calc_int,$(VBANK_TAP))

ifeq ($(call calc_test,$(VBANK_TAP_UP) >= $(COMP_TAPS)),1)
$(error PROFILING_VBANK_MIN up threshold tap $(VBANK_TAP_UP) tap count ($(COMP_TAPS)))
endif
ifeq ($(call calc_test,$(VBANK_TAP_DOWN) >= $(COMP_TAPS)),1)
$(error PROFILING_VBANK_MIN down threshold tap $(VBANK_TAP_DOWN) tap count ($(COMP_TAPS)))
endif

CFLAGS += -DPROFILING_VBANK_MIN_UP=$(VBANK_TAP_UP) \
		  -DPROFILING_VBANK_MIN_DOWN=$(VBANK_TAP_DOWN)
else
$(error Undefined config variable: PROFILING_VBANK_MIN
endif

ifneq ($(VBANK_COMP_SETTLE_MS),)
CFLAGS += $(call interval,VBANK_COMP_SETTLE,$(VBANK_COMP_SETTLE_MS),\
                          $(LIBMSP_SLEEP_TIMER_FREQ),$(LIBMSP_SLEEP_TIMER_TICKS))
else # VBANK_COMP_SETTLE_MS
$(error Unset config variable: VBANK_COMP_SETTLE_MS)
endif # VBANK_COMP_SETTLE_MS

ifneq ($(PROFILING_TIMEOUT_MS),)
CFLAGS += $(call interval,PROFILING_TIMEOUT,$(PROFILING_TIMEOUT_MS),\
                          $(LIBMSP_SLEEP_TIMER_FREQ),$(LIBMSP_SLEEP_TIMER_TICKS))
else # PROFILING_TIMEOUT_MS
$(error Undefined config variable: PROFILING_TIMEOUT_MS)
endif

ifneq ($(PIN_APP_SW),)
CFLAGS += $(call pin,APP_SW)
else
$(error Undefined pin: PIN_APP_SW (see bld/Makefile))
endif

ifneq ($(PIN_VBANK),)
CFLAGS += $(call pin,VBANK)
else
$(error Undefined pin: PIN_VBANK (see bld/Makefile))
endif

ifneq ($(COMP_CHAN_VBANK),)
CFLAGS += $(call comp_chan,VBANK)
else
$(error Undefined comparator channel: COMP_CHAN_VBANK (see bld/Makefile))
endif

ifneq ($(FLASH_STORAGE_SEGMENT),)
CFLAGS += -DFLASH_STORAGE_SEGMENT=$(FLASH_STORAGE_SEGMENT) \
          -DFLASH_STORAGE_SEGMENT_SIZE=$(FLASH_STORAGE_SEGMENT_SIZE)
else
$(error Undefined config variables: $(FLASH_STORAGE_SEGMENT) $(FLASH_STORAGE_SEGMENT_SIZE))
endif # FLASH_STORAGE_SEGMENT

ifeq ($(words $(WATCHDOG_CLOCK) $(WATCHDOG_INTERVAL)),2)
CFLAGS += -DWATCHDOG_INTERVAL=$(WATCHDOG_INTERVAL) \
          -DWATCHDOG_CLOCK=$(WATCHDOG_CLOCK)
else # WATCHDOG_CLOCK
$(error Undefined config variables: $(WATCHDOG_CLOCK) $(WATCHDOG_INTERVAL))
endif
